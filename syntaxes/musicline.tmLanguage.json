{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Musicline",
    "scopeName": "source.musicline",
    "fileTypes": [ "musicline" ],
    "patterns": [
        { "include": "#comment_line" },
        { "include": "#point" },
        { "include": "#voice" },
        { "include": "#type_marker" },
        { "include": "#type_metro" },
        { "include": "#type_note" },
        { "include": "#type_rest" },
        { "include": "#type_tail" },
        { "include": "#data_marker" },
        { "include": "#data_metro" },
        { "include": "#data_note" },
        { "include": "#data_note-muted" },
        { "include": "#short-form_data_note-muted" },
        { "include": "#short-form_data_note-muted-after-backtick" },
        { "include": "#short-form_data_backtick-before-note" },
        { "include": "#short-form_data_note" },
        { "include": "#short-form_data_note-after-backtick" }
    ],
    "repository": {
        "comment_line": {
            "name": "comment.line.number-sign.musicline",
            "begin": "(?<=^\\s*)#",
            "end": "$"
        },
        "point": {
            "name": "constant.numeric.point.musicline",
            "match": "(?<=^\\s*)((0|[1-9]\\d*)(\\.\\d+)?|\\.\\d+)(?=\\s|$)"
        },
        "voice": {
            "name": "variable.parameter.voice.musicline",
            "match": "(?<=^\\s*\\S+\\s+)(0|[1-9]\\d*)(_(0|[1-9]\\d*))*(?=\\s|$)"
        },
        "type_marker": {
            "name": "keyword.other.type.marker.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2})marker(?=\\s|$)"
        },
        "type_metro": {
            "name": "keyword.other.type.metro.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2})metro(?=\\s|$)"
        },
        "type_note": {
            "name": "keyword.other.type.note.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2})note(?=\\s|$)"
        },
        "type_rest": {
            "name": "keyword.other.type.rest.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2})rest(?=\\s|$)"
        },
        "type_tail": {
            "name": "keyword.other.type.tail.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2})tail(?=\\s|$)"
        },
        "data_marker": {
            "name": "string.unquoted.data.marker.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2}marker\\s+)[a-zA-Z\\d'_.-]*[a-zA-Z\\d']+(?=\\s|$)"
        },
        "data_metro": {
            "name": "string.unquoted.data.metro.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2}metro\\s+)((0|[1-9]\\d*)(\\.\\d+)?|\\.\\d+)(?=\\s|$)"
        },
        "data_note": {
            "name": "string.unquoted.data.note.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2}note\\s+)[^\\s\\\\]+(\\s+[^\\s\\\\]+)*(?=\\s*\\\\|\\s*$)"
        },
        "data_note-muted": {
            "name": "comment.line.number-sign.data.note-muted.musicline",
            "match": "(?<=^\\s*(\\S+\\s+){2}note\\s[^\\\\]*)\\\\(\\s*\\S+)*(?=\\s*$)"
        },
        "short-form_data_note-muted": {
            "name": "comment.line.number-sign.short-form.data.note-muted.musicline",
            "match": "(?<=^\\s*\\S+\\s+[^\\\\0-9]*[^\\\\]*)\\\\(\\s*\\S+)*(?=\\s*$)"
        },
        "short-form_data_note-muted-after-backtick": {
            "name": "comment.line.number-sign.short-form.data.note-muted-after-backtick.musicline",
            "match": "(?<=^\\s*\\S+\\s+`\\s*)\\\\(\\s*\\S+)*(?=\\s*$)"
        },
        "short-form_data_backtick-before-note": {
            "name": "comment.line.number-sign.short-form.data.backtick-before-note.musicline",
            "match": "(?<=^\\s*\\S+\\s+)`"
        },
        "short-form_data_note": {
            "name": "string.unquoted.short-form.data.note.musicline",
            "match": "(?<=^\\s*\\S+\\s+)[^\\s\\\\`0-9][^\\s\\\\]*(\\s+[^\\s\\\\]+)*(?=\\s*\\\\|\\s*$)"
        },
        "short-form_data_note-after-backtick": {
            "name": "string.unquoted.short-form.data.note-after-backtick.musicline",
            "match": "(?<=^\\s*\\S+\\s+`\\s*)[^\\s\\\\]+(\\s+[^\\s\\\\]+)*(?=\\s*\\\\|\\s*$)"
        }
    }
}
