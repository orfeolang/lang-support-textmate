{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Musicline",
    "scopeName": "source.musicline",
    "fileTypes": [ "musicline" ],
    "patterns": [
        { "include": "#comment_line" },
        { "include": "#point" },
        { "include": "#voice" },
        { "include": "#type_marker"},
        { "include": "#type_metro"},
        { "include": "#type_note"},
        { "include": "#type_rest"},
        { "include": "#type_tail"},
        { "include": "#data_marker" },
        { "include": "#data_metro" },
        { "include": "#data-note-muted" },
        { "include": "#data-note-active" },
        { "include": "#short-form_data_backtick-before-note" },
        { "include": "#short-form_data_note-first-after-backtick" },
        { "include": "#short-form_data_note-first" },
        { "include": "#short-form_data_note-subsequents" },
        { "include": "#short-form_data_note-muted" }
    ],
    "repository": {
        "comment_line": {
            "name": "comment.line.number-sign.musicline",
            "begin": "(?<=^\\s*)#",
            "end": "(?=$)"
        },
        "point": {
            "name": "constant.numeric.point.musicline",
            "match": "(?<=^\\s*)(\\.\\d+|(0|[1-9]\\d*)(\\.\\d+)?)(?=\\s|$)"
        },
        "voice": {
            "name": "variable.parameter.voice.musicline",
            "match": "(?<=^\\s*\\S+\\s+)(0|[1-9]\\d*)(_(0|[1-9]\\d*))*(?=\\s|$)"
        },
        "type_marker": {
            "name": "keyword.other.type.marker.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+)marker(?=\\s|$)"
        },
        "type_metro": {
            "name": "keyword.other.type.metro.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+)metro(?=\\s|$)"
        },
        "type_note": {
            "name": "keyword.other.type.note.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+)note(?=\\s|$)"
        },
        "type_rest": {
            "name": "keyword.other.type.rest.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+)rest(?=\\s|$)"
        },
        "type_tail": {
            "name": "keyword.other.type.tail.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+)tail(?=\\s|$)"
        },
        "data_marker": {
            "name": "string.unquoted.data.marker.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+marker\\s+)[a-zA-Z\\d'_.-]*[a-zA-Z\\d']+(?=\\s|$)"
        },
        "data_metro": {
            "name": "string.unquoted.data.metro.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+metro\\s+)(\\.\\d+|(0|[1-9]\\d*)(\\.\\d+)?)(?=\\s|$)"
        },
        "data-note-active": {
            "name": "string.unquoted.data.note.active.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+note\\s+.*)(\\\\{2}*)(?!\\\\)(\\s*[^\\s\\\\]+)+(?=\\s*(\\\\|$))",
            "captures": {
                "1": { "name": "comment.line.number-sign.data.note.muting-backslash.musicline" },
                "2": { "name": "string.unquoted.data.note.active.musicline" }
            }

        },
        "data-note-muted": {
            "name": "comment.line.number-sign.data.note.muted.musicline",
            "match": "(?<=^\\s*\\S+\\s+[0-9]\\S*\\s+note\\s+.*)(\\\\{2}*\\\\)(?!\\\\)(\\s*[^\\s\\\\]+)+(?=\\s*(\\\\|$))",
            "captures": {
                "1": { "name": "comment.line.number-sign.data.note.muting-backslash.musicline" },
                "2": { "name": "comment.line.number-sign.short-form.data.note-muted.musicline" }
            }
        },
        "short-form_data_backtick-before-note": {
            "name": "comment.line.number-sign.short-form.data.backtick-before-note.musicline",
            "match": "(?<=^\\s*\\S+\\s+)`"
        },
        "short-form_data_note-first-after-backtick": {
            "name": "string.unquoted.short-form.data.note-after-backtick.musicline",
            "match": "(?<=^\\s*\\S+\\s+`\\s*)(\\s*[^\\s\\\\]+)+(?=\\s*(\\\\|$))"
        },
        "short-form_data_note-first": {
            "name": "string.unquoted.short-form.data.note.musicline",
            "match": "(?<=^\\s*\\S+\\s+)[^\\s\\\\`0-9](\\s*[^\\s\\\\]+)+(?=\\s*(\\\\|$))"
        },
        "short-form_data_note-subsequents": {
            "match": "(?<=^\\s*\\S+\\s+.*)(\\\\{2}+)(?!\\\\)((\\s*[^\\s\\\\]+)+)?(?=\\s*(\\\\|$))",
            "captures": {
                "1": { "name": "comment.line.number-sign.data.note.muting-backslash.musicline" },
                "2": { "name": "string.unquoted.short-form.data.note.musicline" }
            }
        },
        "short-form_data_note-muted": {
            "match": "(?<=^\\s*\\S+\\s+.*)(\\\\{2}*\\\\)(?!\\\\)((\\s*[^\\s\\\\]+)+)?(?=\\s*(\\\\|$))",
            "captures": {
                "1": { "name": "comment.line.number-sign.data.note.muting-backslash.musicline" },
                "2": { "name": "comment.line.number-sign.short-form.data.note-muted.musicline" }
            }
        }
    }
}
